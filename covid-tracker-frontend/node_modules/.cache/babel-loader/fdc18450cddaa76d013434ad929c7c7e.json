{"ast":null,"code":"import _classCallCheck from\"/Users/rajum/Downloads/covid-tracking-system-2/covid-tracker-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/rajum/Downloads/covid-tracking-system-2/covid-tracker-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/rajum/Downloads/covid-tracking-system-2/covid-tracker-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/rajum/Downloads/covid-tracking-system-2/covid-tracker-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/rajum/Downloads/covid-tracking-system-2/covid-tracker-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Bar}from'react-chartjs-2';var DashBoard=/*#__PURE__*/function(_Component){_inherits(DashBoard,_Component);var _super=_createSuper(DashBoard);function DashBoard(){var _this;_classCallCheck(this,DashBoard);_this=_super.call(this);_this.state={Data:{}};_this.getWorldData=_this.getWorldData.bind(_assertThisInitialized(_this));return _this;}_createClass(DashBoard,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"select\",{onChange:function onChange(val){return _this2.getWorldData(val.target.value);}},/*#__PURE__*/React.createElement(\"option\",{value:\"1\"},\"India\"),/*#__PURE__*/React.createElement(\"option\",{value:\"2\"},\"United States\"))),/*#__PURE__*/React.createElement(Bar,{data:this.state.Data,width:100,height:500,options:{maintainAspectRatio:false}}));}},{key:\"componentWillMount\",value:function componentWillMount(){this.getWorldData();}},{key:\"getWorldData\",value:function getWorldData(countryID){var _this3=this;var URL=countryID?'/covidCount/country/'+countryID:'/covidCount/world';fetch(URL,{method:'get',headers:{'Accept':'application/json','Content-Type':'application/json'}}).then(function(Response){return Response.json();}).then(function(result){var caseType=[];var totalCount=[];console.log(result);result.forEach(function(element){caseType.push(element.ct);totalCount.push(element.total);});_this3.setState({Data:{labels:caseType,datasets:[{label:'Covid cases world wide',data:totalCount,backgroundColor:[\"Red\",\"Blue\",\"Green\"]}]}});});}}]);return DashBoard;}(Component);export default DashBoard;","map":{"version":3,"sources":["/Users/rajum/Downloads/covid-tracking-system-2/covid-tracker-frontend/src/pages/dashboard.js"],"names":["React","Component","Bar","DashBoard","state","Data","getWorldData","bind","val","target","value","maintainAspectRatio","countryID","URL","fetch","method","headers","then","Response","json","result","caseType","totalCount","console","log","forEach","element","push","ct","total","setState","labels","datasets","label","data","backgroundColor"],"mappings":"46BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,GAAT,KAAoB,iBAApB,C,GAEMC,CAAAA,S,sGAEF,oBAAc,2CACV,wBAEA,MAAKC,KAAL,CAAa,CACTC,IAAI,CAAE,EADG,CAAb,CAGA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CANU,aAOb,C,6DAGO,iBACJ,mBAAQ,4CACJ,4CACA,8BAAQ,QAAQ,CAAE,kBAACC,GAAD,QAAS,CAAA,MAAI,CAACF,YAAL,CAAkBE,GAAG,CAACC,MAAJ,CAAWC,KAA7B,CAAT,EAAlB,eACA,8BAAQ,KAAK,CAAC,GAAd,UADA,cAEA,8BAAQ,KAAK,CAAC,GAAd,kBAFA,CADA,CADI,cAOJ,oBAAC,GAAD,EAAK,IAAI,CAAE,KAAKN,KAAL,CAAWC,IAAtB,CACA,KAAK,CAAE,GADP,CAEA,MAAM,CAAE,GAFR,CAGA,OAAO,CAAE,CAAEM,mBAAmB,CAAE,KAAvB,CAHT,EAPI,CAAR,CAYH,C,+DAGD,CACI,KAAKL,YAAL,GACH,C,kDACYM,S,CAAW,iBACpB,GAAIC,CAAAA,GAAG,CAAGD,SAAS,CAAI,uBAAuBA,SAA3B,CAAqC,mBAAxD,CACAE,KAAK,CAACD,GAAD,CAAM,CACPE,MAAM,CAAE,KADD,CAEPC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFF,CAAN,CAAL,CAOGC,IAPH,CAOQ,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EAPR,EAQKF,IARL,CAQU,SAACG,MAAD,CAAY,CACd,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACAC,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EACAA,MAAM,CAACK,OAAP,CAAe,SAAAC,OAAO,CAAI,CACtBL,QAAQ,CAACM,IAAT,CAAcD,OAAO,CAACE,EAAtB,EACAN,UAAU,CAACK,IAAX,CAAgBD,OAAO,CAACG,KAAxB,EACH,CAHD,EAIA,MAAI,CAACC,QAAL,CAAc,CACVzB,IAAI,CAAC,CACD0B,MAAM,CAACV,QADN,CAGDW,QAAQ,CAAE,CACN,CACIC,KAAK,CAAE,wBADX,CAEIC,IAAI,CAACZ,UAFT,CAGIa,eAAe,CAAG,CACd,KADc,CAEd,MAFc,CAGd,OAHc,CAHtB,CADM,CAHT,CADK,CAAd,EAmBH,CAnCL,EAoCH,C,uBArEmBlC,S,EAwExB,cAAeE,CAAAA,SAAf","sourcesContent":["import React, { Component } from 'react'; \nimport { Bar } from 'react-chartjs-2'; \n\nclass DashBoard extends Component {\n\n    constructor() {  \n        super();  \n  \n        this.state = { \n            Data: {}\n            };   \n        this.getWorldData = this.getWorldData.bind(this); \n    } \n\n\n    render(){                                                                                                                                                                                                                                                                                               \n        return (<div>\n            <div>\n            <select onChange={(val) => this.getWorldData(val.target.value)}>\n            <option value=\"1\">India</option>\n            <option value=\"2\" >United States</option>\n            </select>\n            </div>\n            <Bar data={this.state.Data}\n            width={100}\n            height={500}\n            options={{ maintainAspectRatio: false }} ></Bar>\n        </div>);\n    }\n\n    componentWillMount()\n    {\n        this.getWorldData();\n    }\n    getWorldData(countryID) {  \n        let URL = countryID ?  '/covidCount/country/'+countryID:'/covidCount/world';\n        fetch(URL, {  \n            method: 'get',  \n            headers: {  \n                'Accept': 'application/json',  \n                'Content-Type': 'application/json'  \n            },  \n             \n        }).then((Response) => Response.json())  \n            .then((result) => {  \n                let caseType = [];\n                let totalCount = [];\n                console.log(result);  \n                result.forEach(element => {\n                    caseType.push(element.ct);\n                    totalCount.push(element.total);\n                });\n                this.setState({\n                    Data:{\n                        labels:caseType,\n                        \n                        datasets: [\n                            {\n                                label: 'Covid cases world wide',\n                                data:totalCount,\n                                backgroundColor : [\n                                    \"Red\",\n                                    \"Blue\",\n                                    \"Green\"\n                                ]\n                            }\n                           \n                        ]\n                        \n                    }\n                });\n            })  \n    } \n}\n\nexport default DashBoard;"]},"metadata":{},"sourceType":"module"}