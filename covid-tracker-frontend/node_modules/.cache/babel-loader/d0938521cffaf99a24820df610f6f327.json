{"ast":null,"code":"var _jsxFileName = \"/Users/rajum/Downloads/covid-tracking-system-2/covid-tracker-frontend/src/pages/dashboard.js\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nclass DashBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Data: {}\n    };\n    this.getWorldData = this.getWorldData.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      data: this.state.Data,\n      width: 100,\n      height: 500,\n      options: {\n        maintainAspectRatio: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: val => this.getWorldData(val.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, \"ALL\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, \"India\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, \"United States\"))));\n  }\n\n  componentWillMount() {\n    this.getWorldData(\"0\");\n  }\n\n  getWorldData(countryID) {\n    let URL = countryID == \"0\" ? '/covidCount/country/' + countryID : '/covidCount/world';\n    fetch(URL, {\n      method: 'get',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(Response => Response.json()).then(result => {\n      let caseType = [];\n      let totalCount = [];\n      console.log(result);\n      result.forEach(element => {\n        caseType.push(element.ct);\n        totalCount.push(element.total);\n      });\n      this.setState({\n        Data: {\n          labels: caseType,\n          datasets: [{\n            label: 'Covid Cases',\n            data: totalCount,\n            backgroundColor: [\"Red\", \"Blue\", \"Green\"]\n          }]\n        }\n      });\n    });\n  }\n\n}\n\nexport default DashBoard;","map":{"version":3,"sources":["/Users/rajum/Downloads/covid-tracking-system-2/covid-tracker-frontend/src/pages/dashboard.js"],"names":["React","Component","Bar","DashBoard","constructor","state","Data","getWorldData","bind","render","maintainAspectRatio","val","target","value","componentWillMount","countryID","URL","fetch","method","headers","then","Response","json","result","caseType","totalCount","console","log","forEach","element","push","ct","total","setState","labels","datasets","label","data","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAE9BG,EAAAA,WAAW,GAAG;AACV;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAGDC,EAAAA,MAAM,GAAE;AACJ,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGJ,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,IAAtB;AACI,MAAA,KAAK,EAAE,GADX;AAEI,MAAA,MAAM,EAAE,GAFZ;AAGI,MAAA,OAAO,EAAE;AAAEI,QAAAA,mBAAmB,EAAE;AAAvB,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHI,eASJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,QAAQ,EAAGC,GAAD,IAAS,KAAKJ,YAAL,CAAkBI,GAAG,CAACC,MAAJ,CAAWC,KAA7B,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI;AAAQ,MAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,CADJ,CATI,CAAR;AAiBH;;AAEDC,EAAAA,kBAAkB,GAClB;AACI,SAAKP,YAAL,CAAkB,GAAlB;AACH;;AACDA,EAAAA,YAAY,CAACQ,SAAD,EAAY;AACpB,QAAIC,GAAG,GAAGD,SAAS,IAAI,GAAb,GAAoB,yBAAuBA,SAA3C,GAAqD,mBAA/D;AACAE,IAAAA,KAAK,CAACD,GAAD,EAAM;AACPE,MAAAA,MAAM,EAAE,KADD;AAEPC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAFF,KAAN,CAAL,CAOGC,IAPH,CAOSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPtB,EAQKF,IARL,CAQWG,MAAD,IAAY;AACd,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,UAAU,GAAG,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAA,MAAAA,MAAM,CAACK,OAAP,CAAeC,OAAO,IAAI;AACtBL,QAAAA,QAAQ,CAACM,IAAT,CAAcD,OAAO,CAACE,EAAtB;AACAN,QAAAA,UAAU,CAACK,IAAX,CAAgBD,OAAO,CAACG,KAAxB;AACH,OAHD;AAIA,WAAKC,QAAL,CAAc;AACV3B,QAAAA,IAAI,EAAC;AACD4B,UAAAA,MAAM,EAACV,QADN;AAGDW,UAAAA,QAAQ,EAAE,CACN;AACIC,YAAAA,KAAK,EAAE,aADX;AAEIC,YAAAA,IAAI,EAACZ,UAFT;AAGIa,YAAAA,eAAe,EAAG,CACd,KADc,EAEd,MAFc,EAGd,OAHc;AAHtB,WADM;AAHT;AADK,OAAd;AAmBH,KAnCL;AAoCH;;AA1E6B;;AA6ElC,eAAenC,SAAf","sourcesContent":["import React, { Component } from 'react'; \nimport { Bar } from 'react-chartjs-2'; \n\nclass DashBoard extends Component {\n\n    constructor() {  \n        super();  \n  \n        this.state = { \n            Data: {}\n            };   \n        this.getWorldData = this.getWorldData.bind(this); \n    } \n\n\n    render(){                                                                                                                                                                                                                                                                                               \n        return (<div>\n            \n            \n            <Bar data={this.state.Data}\n                width={100}\n                height={500}\n                options={{ maintainAspectRatio: false }} >\n            </Bar>\n\n            <div>\n                <select onChange={(val) => this.getWorldData(val.target.value)}>\n                    <option value=\"0\">ALL</option>\n                    <option value=\"1\">India</option>\n                    <option value=\"2\" >United States</option>\n                </select>\n            </div>\n        </div>);\n    }\n\n    componentWillMount()\n    {\n        this.getWorldData(\"0\");\n    }\n    getWorldData(countryID) {  \n        let URL = countryID == \"0\" ?  '/covidCount/country/'+countryID:'/covidCount/world';\n        fetch(URL, {  \n            method: 'get',  \n            headers: {  \n                'Accept': 'application/json',  \n                'Content-Type': 'application/json'  \n            },  \n             \n        }).then((Response) => Response.json())  \n            .then((result) => {  \n                let caseType = [];\n                let totalCount = [];\n                console.log(result);  \n                result.forEach(element => {\n                    caseType.push(element.ct);\n                    totalCount.push(element.total);\n                });\n                this.setState({\n                    Data:{\n                        labels:caseType,\n                        \n                        datasets: [\n                            {\n                                label: 'Covid Cases',\n                                data:totalCount,\n                                backgroundColor : [\n                                    \"Red\",\n                                    \"Blue\",\n                                    \"Green\"\n                                ]\n                            }\n                           \n                        ]\n                        \n                    }\n                });\n            })  \n    } \n}\n\nexport default DashBoard;"]},"metadata":{},"sourceType":"module"}